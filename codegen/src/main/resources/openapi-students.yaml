openapi: 3.0.3
info:
  title:  База данных для деканата OpenAPI спецификация
  version: 1.0.11
servers:
  - url: /v3/api-docs
    description: Dev server
paths:
  /student:
    get:
      tags:
        - students
      summary: Метод получения списка студентов
      operationId: findAll
      responses:
        '200':
          description: Успешный ответ со списком студентов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentDto'
        '400':
          description: Неверное значение статуса
        'default':
          description: Всё нестандартное
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Метод создания студента
      tags:
        - students
      operationId: create
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: '#/components/schemas/StudentDto'
      responses:
        '200':
          description: Успешный ответ создания студента
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStudentResponse'
        '400':
          description: Неверное значение статуса
        'default':
          description: Всё нестандартное
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /student/{student_id}:
    get:
      summary: Метод получения студента по идентификатору
      tags:
        - students
      operationId: findById
      parameters:
        - name: student_id
          in: path
          required: true
          description: Идентификатор студента
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Успешный ответ с одним студентом
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDto'
        '400':
          description: Неверное значение статуса
        'default':
          description: Всё нестандартное
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - students
      summary: Удаление студента
      operationId: delete
      parameters:
        - name: student_id
          in: path
          required: true
          description: Идентификатор студента
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Успешное удаление
          content:
            application/json: {}
        '400':
          description: Неверное значение статуса
        'default':
          description: Всё нестандартное
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    StudentDto:
      type: object
      required:
        - login
        - firstName
        - middleName
        - age
      properties:
        id:
          type: string
          format: uuid
          example: 01d3ff0d-cc37-4863-adef-72d3b0dbf08a
        login:
          type: string
          example: 'Ivan123'
        firstName:
          type: string
          example: Ivan
        middleName:
          type: string
          example: Ivanovich
        lastName:
          type: string
          example: Ivanov
        age:
          type: integer
          format: int32
          example: 23
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/SubjectDto'
          uniqueItems: true
    SubjectDto:
      type: object
      required:
        - subjectName
      properties:
        subjectId:
          type: string
          format: uuid
          example: '123e4567-e89b-12d3-a456-426614174000'
        subjectName:
          type: string
          example: Mathematics
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    CreateStudentResponse:
      type: object
      properties:
        message:
          type: string


